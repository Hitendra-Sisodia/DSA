// palindrome partition
#include<bits/stdc++.h>
using namespace std;
bool isPalin(string str,int s,int e)
{
    while(s <= e){
        if(str[s++] != str[e--]){
            return false;
        }
    }
    return true;
}
void solve(string str,vector<string> output,int index,vector<vector<string> > &ans)
{   
    if(index >= str.size()){
        ans.push_back(output);
        return ;
    }
    for(int i = index ; i < str.size() ; i++){
        string tempstr = str.substr(index,i-index+1);   // str.substr(start,len);
        cout<<tempstr<<endl;
        if(isPalin(str,index,i)){
            output.push_back(tempstr);
            solve(str,output,i+1,ans);
            output.pop_back();
        }
    }
}
vector<vector<string> > palindromePartition(string str)
{
    vector<vector<string> > ans;
    vector<string> output;
    int index = 0;
    solve(str,output,index,ans);
    return ans;
}
int main()
{
    string str = "aabb";
    vector<vector<string> > finalans = palindromePartition(str);
    for(auto it: finalans){
        cout<<"[";
        for(auto i: it){
            cout<<"[";
            for(auto j : i){
                cout<<j;
            }
            cout<<"]";
        }
        cout<<"]"<<endl;
    }
}
