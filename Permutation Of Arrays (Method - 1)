// generate all permutations by using mapping
#include<bits/stdc++.h>
using namespace std;
void permutation(vector<int> arr,vector<int> &output,int visited[],vector<vector<int> > &ans)
{
    // base case
    if(output.size() == arr.size()){
        ans.push_back(output);
        return ;
    }
    for(int i = 0 ; i < arr.size() ; i++){
        if(visited[i] == 0){
            output.push_back(arr[i]);
            visited[i] = 1;
            permutation(arr,output,visited,ans);
            visited[i] = 0;
            output.pop_back();
        }
    }
}
int main()
{
    vector<int> arr = {1,2,1};
    vector<vector<int> > ans;
    // mapping/freq array
    int visited[arr.size()] = {0};
    vector<int> output;
    permutation(arr,output,visited,ans);
    for(auto it: ans){
        for(auto i: it){
            cout<<i<<" ";
        }
        cout<<endl;
    }
}
