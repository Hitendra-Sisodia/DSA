// subset of array using recursion
#include<bits/stdc++.h>
using namespace std;
void solve(vector<int> arr,vector<int> output,int i,vector<vector<int> > &ans)
{
    // base case
    if(i == arr.size()){
        ans.push_back(output);
        return ;
    }
    // exclude
    solve(arr,output,i+1,ans);
    // include
    output.push_back(arr[i]);
    solve(arr,output,i+1,ans);
}
vector<vector<int> > subset(vector<int> arr)
{
    vector<vector<int> > ans;
    vector<int> output;
    int index = 0;
    solve(arr,output,index,ans);
}
int main()
{
    vector<int> arr = {50,30,20,10,5};
    vector<vector<int> > finalans = subset(arr);
    for(auto i: finalans){
        cout<<"[";
        for(auto j: i){
            cout<<j;
        }
        cout<<"]";
    }
}
