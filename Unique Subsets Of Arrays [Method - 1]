// Unique subsets of Array [Method - 1]
#include<bits/stdc++.h>
using namespace std;
void solve(vector<int> &arr,vector<int> output,int index,vector<vector<int> > &ans)
{
    // base case
    if(index >= arr.size()){
        ans.push_back(output);
        return ;
    }
    // include
    output.push_back(arr[index]);
    solve(arr,output,index+1,ans);
    output.pop_back();
    // exclude
    while(index + 1 < arr.size() && arr[index] == arr[index+1]){
        index++;
    }
    solve(arr,output,index+1,ans);
}
vector<vector<int> > permutation(vector<int> arr)
{
    vector<vector<int> > ans;
    vector<int> output;
    int index = 0;
    solve(arr,output,index,ans);
    return ans;
}
int main()
{
    vector<int> arr = {1,2,2};
    vector<vector<int> > finalans = permutation(arr);
    for(auto it: finalans){
        cout<<"[";
        for(auto j : it){
            cout<<j;
        }
        cout<<"]";
    }
}
