#include<bits/stdc++.h>
using namespace std;

bool isSafe(string str,int index,vector<int> visited)\
{
    vector<int> rep(26,0);
    for(int i = 0 ; i < str.size() ; i++){
        if(rep[str[i] - 'a'] == 1){
            return false;
        }
        rep[str[i] - 'a'] = 1;
    }
    for(int i = 0 ; i < str.size() ; i++){
        if(visited[str[i] - 'a'] == 1) {
            return false;
        }
    }
    return true;
}
void solve(vector<string> &arr,int sum,int index,vector<int> &visited,int &maxSum)
{
    // base case
    if(index >= arr.size()){
        maxSum = max(sum,maxSum);
        return ;
    }
    // pick
    if(isSafe(arr[index],index,visited)){
        for(int i = 0 ; i < arr[index].size() ; i++){
            visited[arr[index][i] - 'a'] = 1; 
        }
        sum += arr[index].size();
        solve(arr,sum,index+1,visited,maxSum);
        sum -= arr[index].size();
        for(int i = 0 ; i < arr[index].size() ; i++){
            visited[arr[index][i] - 'a'] = 0; 
        }
    }
    // don't pick
    solve(arr,sum,index+1,visited,maxSum);
}
int maxLen(vector<string> &arr) 
{
    int index = 0;
    int sum = 0;
    int maxSum = 0;
    vector<int> visited(26,0);
    solve(arr,sum,index,visited,maxSum);
    return maxSum;
}
int main () 
{
    vector<string> arr = {"un","iq","ue"};
    cout<<maxLen(arr);
}
